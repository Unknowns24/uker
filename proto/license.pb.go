// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.20.2
// source: src/proto/license.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LicensePurchaseReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    uint64 `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	AppId     uint64 `protobuf:"varint,2,opt,name=appId,proto3" json:"appId,omitempty"`
	PaymentId string `protobuf:"bytes,3,opt,name=paymentId,proto3" json:"paymentId,omitempty"`
}

func (x *LicensePurchaseReq) Reset() {
	*x = LicensePurchaseReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_proto_license_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LicensePurchaseReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LicensePurchaseReq) ProtoMessage() {}

func (x *LicensePurchaseReq) ProtoReflect() protoreflect.Message {
	mi := &file_src_proto_license_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LicensePurchaseReq.ProtoReflect.Descriptor instead.
func (*LicensePurchaseReq) Descriptor() ([]byte, []int) {
	return file_src_proto_license_proto_rawDescGZIP(), []int{0}
}

func (x *LicensePurchaseReq) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *LicensePurchaseReq) GetAppId() uint64 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *LicensePurchaseReq) GetPaymentId() string {
	if x != nil {
		return x.PaymentId
	}
	return ""
}

type LicensePurchaseRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	License string `protobuf:"bytes,2,opt,name=license,proto3" json:"license,omitempty"`
}

func (x *LicensePurchaseRes) Reset() {
	*x = LicensePurchaseRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_proto_license_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LicensePurchaseRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LicensePurchaseRes) ProtoMessage() {}

func (x *LicensePurchaseRes) ProtoReflect() protoreflect.Message {
	mi := &file_src_proto_license_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LicensePurchaseRes.ProtoReflect.Descriptor instead.
func (*LicensePurchaseRes) Descriptor() ([]byte, []int) {
	return file_src_proto_license_proto_rawDescGZIP(), []int{1}
}

func (x *LicensePurchaseRes) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *LicensePurchaseRes) GetLicense() string {
	if x != nil {
		return x.License
	}
	return ""
}

type LicenseRenewReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId   uint64 `protobuf:"varint,1,opt,name=appId,proto3" json:"appId,omitempty"`
	License string `protobuf:"bytes,2,opt,name=license,proto3" json:"license,omitempty"`
	RenewId string `protobuf:"bytes,3,opt,name=renewId,proto3" json:"renewId,omitempty"`
}

func (x *LicenseRenewReq) Reset() {
	*x = LicenseRenewReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_proto_license_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LicenseRenewReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LicenseRenewReq) ProtoMessage() {}

func (x *LicenseRenewReq) ProtoReflect() protoreflect.Message {
	mi := &file_src_proto_license_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LicenseRenewReq.ProtoReflect.Descriptor instead.
func (*LicenseRenewReq) Descriptor() ([]byte, []int) {
	return file_src_proto_license_proto_rawDescGZIP(), []int{2}
}

func (x *LicenseRenewReq) GetAppId() uint64 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *LicenseRenewReq) GetLicense() string {
	if x != nil {
		return x.License
	}
	return ""
}

func (x *LicenseRenewReq) GetRenewId() string {
	if x != nil {
		return x.RenewId
	}
	return ""
}

type LicenseRenewRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *LicenseRenewRes) Reset() {
	*x = LicenseRenewRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_proto_license_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LicenseRenewRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LicenseRenewRes) ProtoMessage() {}

func (x *LicenseRenewRes) ProtoReflect() protoreflect.Message {
	mi := &file_src_proto_license_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LicenseRenewRes.ProtoReflect.Descriptor instead.
func (*LicenseRenewRes) Descriptor() ([]byte, []int) {
	return file_src_proto_license_proto_rawDescGZIP(), []int{3}
}

func (x *LicenseRenewRes) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type LicenseRefoundReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId   uint64 `protobuf:"varint,1,opt,name=appId,proto3" json:"appId,omitempty"`
	License string `protobuf:"bytes,2,opt,name=license,proto3" json:"license,omitempty"`
}

func (x *LicenseRefoundReq) Reset() {
	*x = LicenseRefoundReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_proto_license_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LicenseRefoundReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LicenseRefoundReq) ProtoMessage() {}

func (x *LicenseRefoundReq) ProtoReflect() protoreflect.Message {
	mi := &file_src_proto_license_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LicenseRefoundReq.ProtoReflect.Descriptor instead.
func (*LicenseRefoundReq) Descriptor() ([]byte, []int) {
	return file_src_proto_license_proto_rawDescGZIP(), []int{4}
}

func (x *LicenseRefoundReq) GetAppId() uint64 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *LicenseRefoundReq) GetLicense() string {
	if x != nil {
		return x.License
	}
	return ""
}

type LicenseRefoundRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *LicenseRefoundRes) Reset() {
	*x = LicenseRefoundRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_src_proto_license_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LicenseRefoundRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LicenseRefoundRes) ProtoMessage() {}

func (x *LicenseRefoundRes) ProtoReflect() protoreflect.Message {
	mi := &file_src_proto_license_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LicenseRefoundRes.ProtoReflect.Descriptor instead.
func (*LicenseRefoundRes) Descriptor() ([]byte, []int) {
	return file_src_proto_license_proto_rawDescGZIP(), []int{5}
}

func (x *LicenseRefoundRes) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

var File_src_proto_license_proto protoreflect.FileDescriptor

var file_src_proto_license_proto_rawDesc = []byte{
	0x0a, 0x17, 0x73, 0x72, 0x63, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6c, 0x69, 0x63, 0x65,
	0x6e, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x67, 0x72, 0x70, 0x63, 0x22,
	0x60, 0x0a, 0x12, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61,
	0x73, 0x65, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x61, 0x70,
	0x70, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x22, 0x48, 0x0a, 0x12, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x50, 0x75, 0x72, 0x63,
	0x68, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x22, 0x5b, 0x0a, 0x0f, 0x4c,
	0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x6e, 0x65, 0x77, 0x52, 0x65, 0x71, 0x12, 0x14,
	0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x61,
	0x70, 0x70, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x72, 0x65, 0x6e, 0x65, 0x77, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x72, 0x65, 0x6e, 0x65, 0x77, 0x49, 0x64, 0x22, 0x2b, 0x0a, 0x0f, 0x4c, 0x69, 0x63, 0x65,
	0x6e, 0x73, 0x65, 0x52, 0x65, 0x6e, 0x65, 0x77, 0x52, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x43, 0x0a, 0x11, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65,
	0x52, 0x65, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70,
	0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x22, 0x2d, 0x0a, 0x11, 0x4c, 0x69,
	0x63, 0x65, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x32, 0xd9, 0x01, 0x0a, 0x0e, 0x4c, 0x69,
	0x63, 0x65, 0x6e, 0x73, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3c, 0x0a, 0x0c,
	0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x6e, 0x65, 0x77, 0x12, 0x15, 0x2e, 0x67,
	0x72, 0x70, 0x63, 0x2e, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x6e, 0x65, 0x77,
	0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x4c, 0x69, 0x63, 0x65, 0x6e,
	0x73, 0x65, 0x52, 0x65, 0x6e, 0x65, 0x77, 0x52, 0x65, 0x73, 0x12, 0x42, 0x0a, 0x0e, 0x4c, 0x69,
	0x63, 0x65, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x17, 0x2e, 0x67,
	0x72, 0x70, 0x63, 0x2e, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x66, 0x6f, 0x75,
	0x6e, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x4c, 0x69, 0x63,
	0x65, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x12, 0x45,
	0x0a, 0x0f, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73,
	0x65, 0x12, 0x18, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65,
	0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x67, 0x72,
	0x70, 0x63, 0x2e, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61,
	0x73, 0x65, 0x52, 0x65, 0x73, 0x42, 0x0c, 0x5a, 0x0a, 0x61, 0x70, 0x70, 0x73, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_src_proto_license_proto_rawDescOnce sync.Once
	file_src_proto_license_proto_rawDescData = file_src_proto_license_proto_rawDesc
)

func file_src_proto_license_proto_rawDescGZIP() []byte {
	file_src_proto_license_proto_rawDescOnce.Do(func() {
		file_src_proto_license_proto_rawDescData = protoimpl.X.CompressGZIP(file_src_proto_license_proto_rawDescData)
	})
	return file_src_proto_license_proto_rawDescData
}

var file_src_proto_license_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_src_proto_license_proto_goTypes = []interface{}{
	(*LicensePurchaseReq)(nil), // 0: grpc.LicensePurchaseReq
	(*LicensePurchaseRes)(nil), // 1: grpc.LicensePurchaseRes
	(*LicenseRenewReq)(nil),    // 2: grpc.LicenseRenewReq
	(*LicenseRenewRes)(nil),    // 3: grpc.LicenseRenewRes
	(*LicenseRefoundReq)(nil),  // 4: grpc.LicenseRefoundReq
	(*LicenseRefoundRes)(nil),  // 5: grpc.LicenseRefoundRes
}
var file_src_proto_license_proto_depIdxs = []int32{
	2, // 0: grpc.LicenseService.LicenseRenew:input_type -> grpc.LicenseRenewReq
	4, // 1: grpc.LicenseService.LicenseRefound:input_type -> grpc.LicenseRefoundReq
	0, // 2: grpc.LicenseService.LicensePurchase:input_type -> grpc.LicensePurchaseReq
	3, // 3: grpc.LicenseService.LicenseRenew:output_type -> grpc.LicenseRenewRes
	5, // 4: grpc.LicenseService.LicenseRefound:output_type -> grpc.LicenseRefoundRes
	1, // 5: grpc.LicenseService.LicensePurchase:output_type -> grpc.LicensePurchaseRes
	3, // [3:6] is the sub-list for method output_type
	0, // [0:3] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_src_proto_license_proto_init() }
func file_src_proto_license_proto_init() {
	if File_src_proto_license_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_src_proto_license_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LicensePurchaseReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_proto_license_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LicensePurchaseRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_proto_license_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LicenseRenewReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_proto_license_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LicenseRenewRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_proto_license_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LicenseRefoundReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_src_proto_license_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LicenseRefoundRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_src_proto_license_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_src_proto_license_proto_goTypes,
		DependencyIndexes: file_src_proto_license_proto_depIdxs,
		MessageInfos:      file_src_proto_license_proto_msgTypes,
	}.Build()
	File_src_proto_license_proto = out.File
	file_src_proto_license_proto_rawDesc = nil
	file_src_proto_license_proto_goTypes = nil
	file_src_proto_license_proto_depIdxs = nil
}
